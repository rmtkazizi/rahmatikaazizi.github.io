{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RoMJ5Ks-qqg2"
      },
      "source": [
        "# PROJECT 1"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LZToi2oi1d5y"
      },
      "source": [
        "Data E-Commerce Sales Dataset (kaggel.com):\n",
        "1. Customer Details, mencakup 20.000 data pelanggan (customer_id, sex, customer_age, tenure)\n",
        "2. Basket Details, mencakup 15.000 data transaksi keranjang (customer_id, product_id, basket_date, basket_count)\n",
        "(https://www.kaggle.com/berkayalan/ecommerce-sales-dataset)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O4iKujTLrBED"
      },
      "source": [
        "# Import Libraries"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3zYBdH0wqmJs",
        "outputId": "57b6f9c8-d50b-49e1-bab2-81d01db320af"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FJYlEFBUrGEl"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7t70gWB9rORl"
      },
      "source": [
        "# Load Dataset"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 141,
      "metadata": {
        "id": "dl_RisAarTB_"
      },
      "outputs": [],
      "source": [
        "customer = pd.read_csv('/content/drive/MyDrive/Project/DATA PROJECT PORTOFOLIO/Project 1a_customer_details.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 142,
      "metadata": {
        "id": "oDaw89X3rsdU"
      },
      "outputs": [],
      "source": [
        "basket = pd.read_csv('/content/drive/MyDrive/Project/DATA PROJECT PORTOFOLIO/Project 1b_basket_details.csv')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ezZtGrhCr0bq"
      },
      "source": [
        "# Cuplikan Data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 143,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "guOxrQ2osSO-",
        "outputId": "6a36ff14-65ee-4ec0-fda0-0d417670caa2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-ea68bb6f-bb2b-4843-8523-9be248163e47\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>sex</th>\n",
              "      <th>customer_age</th>\n",
              "      <th>tenure</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>9798859</td>\n",
              "      <td>Male</td>\n",
              "      <td>44.0</td>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11413563</td>\n",
              "      <td>Male</td>\n",
              "      <td>36.0</td>\n",
              "      <td>65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>818195</td>\n",
              "      <td>Male</td>\n",
              "      <td>35.0</td>\n",
              "      <td>129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12049009</td>\n",
              "      <td>Male</td>\n",
              "      <td>33.0</td>\n",
              "      <td>58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10083045</td>\n",
              "      <td>Male</td>\n",
              "      <td>42.0</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea68bb6f-bb2b-4843-8523-9be248163e47')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ea68bb6f-bb2b-4843-8523-9be248163e47 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ea68bb6f-bb2b-4843-8523-9be248163e47');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   customer_id   sex  customer_age  tenure\n",
              "0      9798859  Male          44.0      93\n",
              "1     11413563  Male          36.0      65\n",
              "2       818195  Male          35.0     129\n",
              "3     12049009  Male          33.0      58\n",
              "4     10083045  Male          42.0      88"
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ],
      "source": [
        "# 5 baris teratas dari data customer\n",
        "customer.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 144,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oyA4sz73r24M",
        "outputId": "da7c30c5-9efd-4787-9271-726d3de11acc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 20000 entries, 0 to 19999\n",
            "Data columns (total 4 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   customer_id   20000 non-null  int64  \n",
            " 1   sex           20000 non-null  object \n",
            " 2   customer_age  20000 non-null  float64\n",
            " 3   tenure        20000 non-null  int64  \n",
            "dtypes: float64(1), int64(2), object(1)\n",
            "memory usage: 625.1+ KB\n"
          ]
        }
      ],
      "source": [
        "# informasi general tentang dataset customer\n",
        "customer.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 145,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "Lsu8qUSjttrj",
        "outputId": "48a96de5-930e-4776-dd79-7819160d5b44"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-cee5326b-5ead-4b55-8942-c36710edf449\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>customer_age</th>\n",
              "      <th>tenure</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>2.000000e+04</td>\n",
              "      <td>20000.000000</td>\n",
              "      <td>20000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.760040e+07</td>\n",
              "      <td>262.222550</td>\n",
              "      <td>44.396800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>8.679505e+06</td>\n",
              "      <td>604.321589</td>\n",
              "      <td>31.998376</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2.093000e+03</td>\n",
              "      <td>-34.000000</td>\n",
              "      <td>4.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.188115e+07</td>\n",
              "      <td>29.000000</td>\n",
              "      <td>21.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.560912e+07</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>35.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2.228484e+07</td>\n",
              "      <td>123.000000</td>\n",
              "      <td>60.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>4.462566e+07</td>\n",
              "      <td>2022.000000</td>\n",
              "      <td>133.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cee5326b-5ead-4b55-8942-c36710edf449')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cee5326b-5ead-4b55-8942-c36710edf449 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cee5326b-5ead-4b55-8942-c36710edf449');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "        customer_id  customer_age        tenure\n",
              "count  2.000000e+04  20000.000000  20000.000000\n",
              "mean   1.760040e+07    262.222550     44.396800\n",
              "std    8.679505e+06    604.321589     31.998376\n",
              "min    2.093000e+03    -34.000000      4.000000\n",
              "25%    1.188115e+07     29.000000     21.000000\n",
              "50%    1.560912e+07     38.000000     35.000000\n",
              "75%    2.228484e+07    123.000000     60.000000\n",
              "max    4.462566e+07   2022.000000    133.000000"
            ]
          },
          "metadata": {},
          "execution_count": 145
        }
      ],
      "source": [
        "customer.describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iYgC56qv70DV"
      },
      "source": [
        "Pada cuplikan data diatas dapat dilihat banyak data, rata-rata, standar deviasi, nilai minimum dan maksimum, serta nilai kuartil 1, 2, dan 3 dari dataset customer"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 146,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Qq279HMbsZo6",
        "outputId": "a62675f3-5c05-4ff5-f449-6b11b58a5c93"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-00e67bae-dde1-4ca2-874c-0d25cb657eac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>basket_date</th>\n",
              "      <th>basket_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>42366585</td>\n",
              "      <td>41475073</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>35956841</td>\n",
              "      <td>43279538</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26139578</td>\n",
              "      <td>31715598</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3262253</td>\n",
              "      <td>47880260</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20056678</td>\n",
              "      <td>44747002</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00e67bae-dde1-4ca2-874c-0d25cb657eac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-00e67bae-dde1-4ca2-874c-0d25cb657eac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-00e67bae-dde1-4ca2-874c-0d25cb657eac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   customer_id  product_id basket_date  basket_count\n",
              "0     42366585    41475073  2019-06-19             2\n",
              "1     35956841    43279538  2019-06-19             2\n",
              "2     26139578    31715598  2019-06-19             3\n",
              "3      3262253    47880260  2019-06-19             2\n",
              "4     20056678    44747002  2019-06-19             2"
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ],
      "source": [
        "# 5 baris teratas dari data basket\n",
        "basket.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 147,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gAMzi_zOr8it",
        "outputId": "0ec60a22-d3e0-4120-a743-b50677158dcc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 15000 entries, 0 to 14999\n",
            "Data columns (total 4 columns):\n",
            " #   Column        Non-Null Count  Dtype \n",
            "---  ------        --------------  ----- \n",
            " 0   customer_id   15000 non-null  int64 \n",
            " 1   product_id    15000 non-null  int64 \n",
            " 2   basket_date   15000 non-null  object\n",
            " 3   basket_count  15000 non-null  int64 \n",
            "dtypes: int64(3), object(1)\n",
            "memory usage: 468.9+ KB\n"
          ]
        }
      ],
      "source": [
        "# informasi general tentang dataset basket\n",
        "basket.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 148,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "rlhdND49t41r",
        "outputId": "b7229f7b-a76e-4008-e696-d7e6ef394586"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-bd755b50-c534-4810-82b4-2c0eeb2aeea1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>basket_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.500000e+04</td>\n",
              "      <td>1.500000e+04</td>\n",
              "      <td>15000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.808567e+07</td>\n",
              "      <td>3.269771e+07</td>\n",
              "      <td>2.153733</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.233000e+07</td>\n",
              "      <td>1.629455e+07</td>\n",
              "      <td>0.517929</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>4.784000e+03</td>\n",
              "      <td>4.939000e+04</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>8.659327e+06</td>\n",
              "      <td>3.137412e+07</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.520775e+07</td>\n",
              "      <td>3.694759e+07</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2.663904e+07</td>\n",
              "      <td>4.502408e+07</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>4.460824e+07</td>\n",
              "      <td>5.579097e+07</td>\n",
              "      <td>10.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd755b50-c534-4810-82b4-2c0eeb2aeea1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bd755b50-c534-4810-82b4-2c0eeb2aeea1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bd755b50-c534-4810-82b4-2c0eeb2aeea1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "        customer_id    product_id  basket_count\n",
              "count  1.500000e+04  1.500000e+04  15000.000000\n",
              "mean   1.808567e+07  3.269771e+07      2.153733\n",
              "std    1.233000e+07  1.629455e+07      0.517929\n",
              "min    4.784000e+03  4.939000e+04      2.000000\n",
              "25%    8.659327e+06  3.137412e+07      2.000000\n",
              "50%    1.520775e+07  3.694759e+07      2.000000\n",
              "75%    2.663904e+07  4.502408e+07      2.000000\n",
              "max    4.460824e+07  5.579097e+07     10.000000"
            ]
          },
          "metadata": {},
          "execution_count": 148
        }
      ],
      "source": [
        "basket.describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6i8RDRwe8T4L"
      },
      "source": [
        "Pada cuplikan data diatas dapat dilihat banyak data, rata-rata, standar deviasi, nilai minimum dan maksimum, serta nilai kuartil 1, 2, dan 3 dari dataset basket"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hmUfzDIasf8x"
      },
      "source": [
        "# Data Prepocessing"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Idmccv4Dsx5-"
      },
      "source": [
        "# #handling missing data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 149,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PBg2gmaEsllY",
        "outputId": "1feca0d2-9abc-41cd-b55d-941aa04f29d5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "customer_id     0\n",
              "sex             0\n",
              "customer_age    0\n",
              "tenure          0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 149
        }
      ],
      "source": [
        "# jumlah entry NULL di setiap kolom\n",
        "customer.isna().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 150,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PncKbbLBsqPn",
        "outputId": "e7bbc493-3e44-48d1-f6da-5f2e426b9cd8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "customer_id     0\n",
              "product_id      0\n",
              "basket_date     0\n",
              "basket_count    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ],
      "source": [
        "# jumlah entry NULL di setiap kolom\n",
        "basket.isna().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dKndPAVC3mzH"
      },
      "source": [
        "Tidak ada missing value untuk kedua dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ahiI2y_us4o_"
      },
      "source": [
        "# #handling duplicate data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 151,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K3dbm7Zos7tw",
        "outputId": "290c5d8f-c258-4eb2-b948-2ee993af178e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 151
        }
      ],
      "source": [
        "# cek jumlah duplicate rows dari semua rows\n",
        "customer.duplicated().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 152,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RVhZzPbTtAWi",
        "outputId": "771141b0-0965-4589-b988-1c22714e0db5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 152
        }
      ],
      "source": [
        "# cek jumlah duplicate rows dari semua rows\n",
        "basket.duplicated().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xkGCl8Oq3xjb"
      },
      "source": [
        "Tidak ada data duplicate untuk masing-masing dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RvISIgVBb763"
      },
      "source": [
        "# Analisis Eksploratif Data (Customer Dataset)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 153,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7mA9WrmSc6jh",
        "outputId": "66be83dc-a8b1-43a7-d171-95f2345c3036"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Male', 'Female', 'kvkktalepsilindi', 'UNKNOWN'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ],
      "source": [
        "#Periksa kategori apa saja yang ada pada kolom sex\n",
        "customer.sex.unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 154,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x7wkJHV0fKD9",
        "outputId": "165596aa-4e63-4140-c806-2beecd48c075"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[3597]"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ],
      "source": [
        "#Periksa pada objek berapa yang memiliki kategori 'UNKNOWN'\n",
        "customer.index[customer['sex']=='UNKNOWN'].tolist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 155,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hQxYGONDfV2I",
        "outputId": "5887b7ee-4cb1-43a3-8bb8-a7b11a40d7e7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1201, 6133, 6443, 8481, 9283, 10035, 11102, 19785]"
            ]
          },
          "metadata": {},
          "execution_count": 155
        }
      ],
      "source": [
        "#Periksa pada objek berapa yang memiliki kategori 'kvkktalepsilindi'\n",
        "customer.index[customer['sex']=='kvkktalepsilindi'].tolist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 156,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "I6iICmtGf08e",
        "outputId": "263ddf30-9d49-4f1a-9c7d-4a4cefcceac9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-272ad7ea-eb19-488f-91b3-489c479cd178\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>sex</th>\n",
              "      <th>customer_age</th>\n",
              "      <th>tenure</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>9798859</td>\n",
              "      <td>Male</td>\n",
              "      <td>44.0</td>\n",
              "      <td>93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11413563</td>\n",
              "      <td>Male</td>\n",
              "      <td>36.0</td>\n",
              "      <td>65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>818195</td>\n",
              "      <td>Male</td>\n",
              "      <td>35.0</td>\n",
              "      <td>129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12049009</td>\n",
              "      <td>Male</td>\n",
              "      <td>33.0</td>\n",
              "      <td>58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10083045</td>\n",
              "      <td>Male</td>\n",
              "      <td>42.0</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19995</th>\n",
              "      <td>12557307</td>\n",
              "      <td>Male</td>\n",
              "      <td>41.0</td>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19996</th>\n",
              "      <td>12595961</td>\n",
              "      <td>Male</td>\n",
              "      <td>29.0</td>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19997</th>\n",
              "      <td>12520991</td>\n",
              "      <td>Male</td>\n",
              "      <td>35.0</td>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19998</th>\n",
              "      <td>12612719</td>\n",
              "      <td>Male</td>\n",
              "      <td>39.0</td>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19999</th>\n",
              "      <td>12572063</td>\n",
              "      <td>Male</td>\n",
              "      <td>28.0</td>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>19991 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-272ad7ea-eb19-488f-91b3-489c479cd178')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-272ad7ea-eb19-488f-91b3-489c479cd178 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-272ad7ea-eb19-488f-91b3-489c479cd178');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       customer_id   sex  customer_age  tenure\n",
              "0          9798859  Male          44.0      93\n",
              "1         11413563  Male          36.0      65\n",
              "2           818195  Male          35.0     129\n",
              "3         12049009  Male          33.0      58\n",
              "4         10083045  Male          42.0      88\n",
              "...            ...   ...           ...     ...\n",
              "19995     12557307  Male          41.0      52\n",
              "19996     12595961  Male          29.0      52\n",
              "19997     12520991  Male          35.0      52\n",
              "19998     12612719  Male          39.0      52\n",
              "19999     12572063  Male          28.0      52\n",
              "\n",
              "[19991 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 156
        }
      ],
      "source": [
        "#Drop objek yang memiliki kategori selain Male dan Female\n",
        "customer1= customer.drop([customer.index[1201], customer.index[6133],customer.index[6443], customer.index[8481],customer.index[9283], customer.index[10035],customer.index[11102], customer.index[19785],customer.index[3597]])\n",
        "customer1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 157,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TgPMLekngPOR",
        "outputId": "60750139-b3d6-4a25-9f4c-46aae7a1333b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Male', 'Female'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ],
      "source": [
        "#Cek kembali kategori apa saja yang ada pada kolom sex\n",
        "customer1.sex.unique()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "61RAWQy0ganZ"
      },
      "source": [
        "Setelah kolom sex dibersihkan dari kategori selain gender, maka customer yang tersisa ada sebanyak 19991 customer."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 158,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "urnpCB0fnRZb",
        "outputId": "3fb21e36-7f1e-451a-baab-4fa0af103b49"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-2f8162b9-b033-49f8-89ed-bc34e459a1cb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>customer_age</th>\n",
              "      <th>tenure</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sex</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Female</th>\n",
              "      <td>4669</td>\n",
              "      <td>4669</td>\n",
              "      <td>4669</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Male</th>\n",
              "      <td>15322</td>\n",
              "      <td>15322</td>\n",
              "      <td>15322</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f8162b9-b033-49f8-89ed-bc34e459a1cb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2f8162b9-b033-49f8-89ed-bc34e459a1cb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2f8162b9-b033-49f8-89ed-bc34e459a1cb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "        customer_id  customer_age  tenure\n",
              "sex                                      \n",
              "Female         4669          4669    4669\n",
              "Male          15322         15322   15322"
            ]
          },
          "metadata": {},
          "execution_count": 158
        }
      ],
      "source": [
        "#melihat jumlah customer berdasarkan jenis kelamin\n",
        "gender=customer1.groupby('sex').count()\n",
        "gender"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 159,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 264
        },
        "id": "YAEDt80QnAnp",
        "outputId": "6365628a-fb8d-409e-f849-41fb08d6f450"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Visual perbandingan jenis kelamin costumer\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "labels = 'Female', 'Male'\n",
        "sections = [4669, 15322]\n",
        "colors = ['y', 'g']\n",
        "\n",
        "plt.pie(sections, labels=labels, colors=colors,\n",
        "        startangle=90,\n",
        "        explode = (0, 0.1),\n",
        "        autopct = '%1.2f%%')\n",
        "\n",
        "plt.axis('equal') # Try commenting this out.\n",
        "plt.title('Persentase Costumer berdasarkan Jenis Kelamin')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "u0p6AN5Y_bBN"
      },
      "source": [
        "Costumer didominasi oleh jenis kelamin laki-laki sebanyak 76%"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 160,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "8H1vb7E3_obj",
        "outputId": "affc72fc-99b8-4b39-b225-49a7687693b8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-df2799d8-aa59-4773-aac5-9b1e5e66fc47\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_age</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>-34.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3.0</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5.0</th>\n",
              "      <td>710</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>139.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022.0</th>\n",
              "      <td>2102</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>93 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df2799d8-aa59-4773-aac5-9b1e5e66fc47')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-df2799d8-aa59-4773-aac5-9b1e5e66fc47 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-df2799d8-aa59-4773-aac5-9b1e5e66fc47');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                   count\n",
              "             customer_id\n",
              "customer_age            \n",
              "-34.0                  1\n",
              " 3.0                   2\n",
              " 4.0                   1\n",
              " 5.0                 710\n",
              " 6.0                   1\n",
              "...                  ...\n",
              " 127.0                 1\n",
              " 130.0                 1\n",
              " 139.0                 1\n",
              " 149.0                 1\n",
              " 2022.0             2102\n",
              "\n",
              "[93 rows x 1 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 160
        }
      ],
      "source": [
        "#Kelompokkan data berdasarkan usia \n",
        "age = pd.pivot_table(data=customer, index=['customer_age'],values='customer_id', aggfunc=['count'])\n",
        "age"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 161,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hS6KbbfaCJXe",
        "outputId": "3ed81256-8b31-4e1b-cbdf-a045533cb2fd"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   count\n",
            "             customer_id\n",
            "customer_age            \n",
            "-34.0                  1\n",
            " 3.0                   2\n",
            " 4.0                   1\n",
            " 5.0                 710\n",
            " 6.0                   1\n",
            "...                  ...\n",
            " 124.0                 5\n",
            " 127.0                 1\n",
            " 130.0                 1\n",
            " 139.0                 1\n",
            " 149.0                 1\n",
            "\n",
            "[91 rows x 1 columns]\n"
          ]
        }
      ],
      "source": [
        "#Periksa dan drop jika terdapat outlier pada usia\n",
        "from scipy import stats\n",
        "import numpy as np\n",
        "z_scores = stats.zscore(age)\n",
        "#calculate z-scores of `df`\n",
        "\n",
        "abs_z_scores = np.abs(z_scores)\n",
        "filtered_entries = (abs_z_scores < 3).all(axis=1)\n",
        "ages = age[filtered_entries]\n",
        "\n",
        "print(ages)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 162,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "MQarjY71dUwq",
        "outputId": "1c9e3d67-3a2e-4c44-eb0c-c6218f2235f8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f7798ad5ed0>"
            ]
          },
          "metadata": {},
          "execution_count": 162
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAEHCAYAAABV4gY/AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deXxU9d3o8c93Jvu+kCASIIC4oKBgFNRqLbihrWDdH6ug9FJvLa2ttsX79F611yq2PvXRPl5bWlFUrPZBq2ixVdFqpRVNMOwoEVkS9kDIvszM7/5xzgwDJGRCZjsz3/eLeeXMOWfO+WWS+ebH93zP7yfGGJRSSiUWV6wboJRSKvw0uCulVALS4K6UUglIg7tSSiUgDe5KKZWANLgrpVQCSol1AwAGDBhgysvLY90MpZRylKqqqr3GmJLutsVFcC8vL6eysjLWzVBKKUcRkS09bdO0jFJKJSAN7koplYA0uCulVAKKi5y7Usmqq6uL2tpa2tvbY90UFccyMjIoKysjNTU15NeEFNxF5IfAtwEDrAZuBQYBLwLFQBVwszGmU0TSgWeBM4F64HpjzOY+fB9KJY3a2lpyc3MpLy9HRGLdHBWHjDHU19dTW1vL8OHDQ35dr2kZERkMfB+oMMacBriBG4CHgUeNMScA+4GZ9ktmAvvt9Y/a+ymlutHe3k5xcbEGdtUjEaG4uLjP/7sLNeeeAmSKSAqQBewAJgGL7O0LgGn28lT7Ofb2yaK/uUr1SD8eqjfH8jvSa3A3xtQBjwBbsYL6Aaw0TIMxxmPvVgsMtpcHA9vs13rs/Yv73DKVEJ768Et+/vq6WDdDhYGIcNdddwWeP/LII9x3330RPWd5eTlXX3114PmiRYuYMWNGRM+ZKEJJyxRi9caHA8cD2cBl/T2xiMwSkUoRqdyzZ09/D6fi1Puf7+Ht9Ttj3QwVBunp6bzyyivs3bs3quetqqpi3TrtIPRVKGmZi4AvjTF7jDFdwCvAeUCBnaYBKAPq7OU6YAiAvT0f68LqIYwx84wxFcaYipKSbu+eVQmgub2LxjZP7zuquJeSksKsWbN49NFHj9i2efNmJk2axNixY5k8eTJbt24FYMaMGXz/+9/n3HPPZcSIESxatCjwml/96lecddZZjB07lnvvvbfH895111384he/OGL9vn37mDZtGmPHjmXixImsWrUKgPvuu4/bbruNCy+8kBEjRvD4448HXvP8889z9tlnc8YZZ/Cd73wHr9d7zO9HvAsluG8FJopIlp07nwysA94DrrH3mQ68Zi8vtp9jb3/X6Fx+Saup3UNjexc+n/4KJII77riDhQsXcuDAgUPWz549m+nTp7Nq1Spuuukmvv/97we27dixgw8//JA33niDOXPmAPDWW2+xceNGPv74Y6qrq6mqquKDDz7o9pzXXXcdK1asoKam5pD19957L+PGjWPVqlU8+OCD3HLLLYFtGzZs4G9/+xsff/wx999/P11dXaxfv56XXnqJZcuWUV1djdvtZuHCheF6a+JOr6WQxpjlIrIIWAF4gE+BecBfgBdF5AF73VP2S54CnhORGmAfVmWNSlLNHR6MgeZOD3kZodfoqviUl5fHLbfcwuOPP05mZmZg/b/+9S9eeeUVAG6++WZ+8pOfBLZNmzYNl8vF6NGj2bVrF2AF97feeotx48YB0NzczMaNG7nggguOOKfb7ebHP/4xDz30EFOmTAms//DDD3n55ZcBmDRpEvX19TQ2NgJwxRVXkJ6eTnp6OqWlpezatYulS5dSVVXFWWedBUBbWxulpaXhfHviSkh17saYe4HD/9+0CTi7m33bgWv73zSVCJrarZRMY1uXBvcEceeddzJ+/HhuvfXWkPZPT08PLPv/E2+M4Z577uE73/lOSMe4+eabeeihhzjttNP6fE63243H48EYw/Tp03nooYdCOobT6fADKmJ8PkNzhz+4a949URQVFXHdddfx1FNPBdade+65vPjiiwAsXLiQ888//6jHuPTSS5k/fz7Nzc0A1NXVsXv3bgAmT55MXV3dIfunpqbywx/+8JB8//nnnx9Iq/z9739nwIAB5OXl9XjOyZMns2jRosB59u3bx5YtPQ6q6Hga3FXENHceDOgH2rpi2BIVbnfdddchVTO/+c1vePrppxk7dizPPfccjz322FFff8kll/Bv//ZvnHPOOYwZM4ZrrrmGpqYmfD4fNTU1FBUVHfGamTNn4vEc/J267777qKqqYuzYscyZM4cFCxYc8Zpgo0eP5oEHHuCSSy5h7NixXHzxxezYsaOP37lzSDxc66yoqDA6nnvi2d7Qxrlz3wXgdzefyaWnHhfjFsWf9evXc8opp8S6GXFjzZo1zJ8/n1//+texbkrc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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "ages.plot()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IC_ZSlYOzyj7"
      },
      "source": [
        "Kontribusi terbesar datang dari customer dengan kelompok usia 25 sampai 50 tahun "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 163,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YK094P6Nt_PM",
        "outputId": "a6f5e25b-249a-4f1b-b31b-654edf4c10e8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "sex\n",
              "Female    175260\n",
              "Male      712325\n",
              "Name: tenure, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 163
        }
      ],
      "source": [
        "#Total tenure customer berdasarkan gender\n",
        "tenure=customer1.groupby('sex')['tenure'].sum()\n",
        "tenure"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 193,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "JiXusVhovIZd",
        "outputId": "18e499c4-c9df-49d3-bdf8-f70a760202d9"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 288x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "#Visualization\n",
        "import matplotlib.pyplot as plt\n",
        "plt.figure(figsize = (4,3))\n",
        "gender = ['Female', 'Male']\n",
        "\n",
        "tenure = [175260, 712325]\n",
        "plt.bar(gender, tenure, width= 0.9, align='center', color=['r', 'b'])\n",
        "i = 1.0\n",
        "j = 0\n",
        "for i in range(len(gender)):\n",
        "    plt.annotate(tenure[i], (-0.1 + i, tenure[i] + j))\n",
        "\n",
        "plt.legend(labels = ['Total Tenure'])\n",
        "plt.title(\"Total lamanya tenure customer berdasarkan jenis kelamin\")\n",
        "plt.xlabel('Customer')\n",
        "plt.ylabel('Tenure')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XrKWSP8rwMy7"
      },
      "source": [
        "Berdasarkan bar chart diatas dapat dilihat customer dengan jenis kelamin laki-laki cenderung memiliki total waktu tenure yang lebih lama dibandingkan total waktu tenure customer perempuan."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z2ejLY-d00KZ"
      },
      "source": [
        "# Analisis Data Eksploratif (Basket Dataset)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 165,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oQPSSoPd06Gd",
        "outputId": "dca49de6-7def-49ec-9254-34160f418034"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "basket_date\n",
              "2019-05-20     518\n",
              "2019-05-21     457\n",
              "2019-05-22     276\n",
              "2019-05-23     275\n",
              "2019-05-24     611\n",
              "2019-05-25    1162\n",
              "2019-05-26    1578\n",
              "2019-05-27    1617\n",
              "2019-05-28    1213\n",
              "2019-05-29     464\n",
              "2019-05-30     346\n",
              "2019-05-31     379\n",
              "2019-06-01     298\n",
              "2019-06-02     270\n",
              "2019-06-03     293\n",
              "2019-06-04     289\n",
              "2019-06-05     205\n",
              "2019-06-06     187\n",
              "2019-06-07     285\n",
              "2019-06-08     348\n",
              "2019-06-09     508\n",
              "2019-06-10     474\n",
              "2019-06-11     428\n",
              "2019-06-12     289\n",
              "2019-06-13     215\n",
              "2019-06-14     392\n",
              "2019-06-15     399\n",
              "2019-06-16     371\n",
              "2019-06-17     273\n",
              "2019-06-18     345\n",
              "2019-06-19     235\n",
              "Name: customer_id, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 165
        }
      ],
      "source": [
        "#Melihat jumlah penjualan berdasarkan waktu (dataset basket)\n",
        "penjualan = basket.groupby('basket_date')['customer_id'].count()\n",
        "penjualan"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 166,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "TGqKIaPS338V",
        "outputId": "807ecac5-f4ce-4973-d1fc-9fc8d2ecd1ac"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f7798c93390>"
            ]
          },
          "metadata": {},
          "execution_count": 166
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "#Visualisasi trend jumlah penjualan berdasarkan waktu (dataset basket)\n",
        "penjualan.plot()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tJKPbDgjEGNO"
      },
      "source": [
        "1. Terjadi peningkatan penjualan yang sangat besar pada tanggal 25 mei dibanding hari sebelumnya\n",
        "2. Hari dengan jumlah penjualan yang sangat besar terjadi pada tanggal 25 mei s/d 28 mei\n",
        "3. 27 mei 2019, merupakan hari dengan jumlah penjualan terbanyak\n",
        "4. Jumlah penjualan paling sedikit terjadi pada tanggal 06/06/2019,"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 167,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 454
        },
        "id": "_w3YZe1CGIqt",
        "outputId": "552809b6-656c-41b1-a5d8-f528ae971a72"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f0c52dce-5b73-46a2-8588-145bcebf119c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>basket_date</th>\n",
              "      <th>basket_count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product_id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>43524799</th>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31516269</th>\n",
              "      <td>25</td>\n",
              "      <td>25</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39833031</th>\n",
              "      <td>24</td>\n",
              "      <td>24</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46130148</th>\n",
              "      <td>17</td>\n",
              "      <td>17</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40276011</th>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33321392</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33324373</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33325533</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33333841</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55790974</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>13161 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0c52dce-5b73-46a2-8588-145bcebf119c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f0c52dce-5b73-46a2-8588-145bcebf119c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f0c52dce-5b73-46a2-8588-145bcebf119c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "            customer_id  basket_date  basket_count\n",
              "product_id                                        \n",
              "43524799             32           32            32\n",
              "31516269             25           25            25\n",
              "39833031             24           24            24\n",
              "46130148             17           17            17\n",
              "40276011             12           12            12\n",
              "...                 ...          ...           ...\n",
              "33321392              1            1             1\n",
              "33324373              1            1             1\n",
              "33325533              1            1             1\n",
              "33333841              1            1             1\n",
              "55790974              1            1             1\n",
              "\n",
              "[13161 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 167
        }
      ],
      "source": [
        "#Melihat produk yang banyak diminati, kelompokan data berdasarkan product id \n",
        "produk = basket.groupby('product_id').count()\n",
        "produk1 = produk.sort_values([\"customer_id\"], ascending=False)\n",
        "produk1"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AjnvbfrjY_zh"
      },
      "source": [
        "1. Terdapat 13161 jenis produk berdasarkan produk.id, \n",
        "2. Produk yang paling diminati adalah produk dengan id 43524799, sebanyak 32 produk"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "h6pyyHCzCXmO"
      },
      "source": [
        "# Banyaknya Customer yang Berbelanja (berdasarkan hari)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 168,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "MXYGiM6A572x",
        "outputId": "2f9a7ee0-f8bc-4b17-e5d6-87cd22bc74f9"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-a27c277d-8c6c-44bb-a06f-faa766005cd4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>basket_date</th>\n",
              "      <th>basket_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>42366585</td>\n",
              "      <td>41475073</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>35956841</td>\n",
              "      <td>43279538</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26139578</td>\n",
              "      <td>31715598</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3262253</td>\n",
              "      <td>47880260</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20056678</td>\n",
              "      <td>44747002</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14995</th>\n",
              "      <td>8336862</td>\n",
              "      <td>50977318</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14996</th>\n",
              "      <td>9500785</td>\n",
              "      <td>43862061</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14997</th>\n",
              "      <td>22787344</td>\n",
              "      <td>6041664</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14998</th>\n",
              "      <td>8221263</td>\n",
              "      <td>3597369</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14999</th>\n",
              "      <td>4912577</td>\n",
              "      <td>46646893</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>15000 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a27c277d-8c6c-44bb-a06f-faa766005cd4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a27c277d-8c6c-44bb-a06f-faa766005cd4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a27c277d-8c6c-44bb-a06f-faa766005cd4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       customer_id  product_id basket_date  basket_count\n",
              "0         42366585    41475073  2019-06-19             2\n",
              "1         35956841    43279538  2019-06-19             2\n",
              "2         26139578    31715598  2019-06-19             3\n",
              "3          3262253    47880260  2019-06-19             2\n",
              "4         20056678    44747002  2019-06-19             2\n",
              "...            ...         ...         ...           ...\n",
              "14995      8336862    50977318  2019-05-26             2\n",
              "14996      9500785    43862061  2019-05-26             2\n",
              "14997     22787344     6041664  2019-05-26             2\n",
              "14998      8221263     3597369  2019-05-26             2\n",
              "14999      4912577    46646893  2019-05-26             2\n",
              "\n",
              "[15000 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 168
        }
      ],
      "source": [
        "from pandas import to_datetime\n",
        "basket['basket_date'] = to_datetime(basket['basket_date'], errors='coerce')\n",
        "basket"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 169,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "31Cb7L8j7V4S",
        "outputId": "de03d4bf-5834-4e4a-8f68-de6876a2a1fb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-89689a46-0227-42fc-a928-29aa360e196e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>basket_date</th>\n",
              "      <th>basket_count</th>\n",
              "      <th>hari</th>\n",
              "      <th>weekend</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>42366585</td>\n",
              "      <td>41475073</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>35956841</td>\n",
              "      <td>43279538</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26139578</td>\n",
              "      <td>31715598</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3262253</td>\n",
              "      <td>47880260</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20056678</td>\n",
              "      <td>44747002</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14995</th>\n",
              "      <td>8336862</td>\n",
              "      <td>50977318</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14996</th>\n",
              "      <td>9500785</td>\n",
              "      <td>43862061</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14997</th>\n",
              "      <td>22787344</td>\n",
              "      <td>6041664</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14998</th>\n",
              "      <td>8221263</td>\n",
              "      <td>3597369</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14999</th>\n",
              "      <td>4912577</td>\n",
              "      <td>46646893</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>15000 rows × 6 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89689a46-0227-42fc-a928-29aa360e196e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-89689a46-0227-42fc-a928-29aa360e196e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-89689a46-0227-42fc-a928-29aa360e196e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       customer_id  product_id basket_date  basket_count  hari  weekend\n",
              "0         42366585    41475073  2019-06-19             2     2        0\n",
              "1         35956841    43279538  2019-06-19             2     2        0\n",
              "2         26139578    31715598  2019-06-19             3     2        0\n",
              "3          3262253    47880260  2019-06-19             2     2        0\n",
              "4         20056678    44747002  2019-06-19             2     2        0\n",
              "...            ...         ...         ...           ...   ...      ...\n",
              "14995      8336862    50977318  2019-05-26             2     6        1\n",
              "14996      9500785    43862061  2019-05-26             2     6        1\n",
              "14997     22787344     6041664  2019-05-26             2     6        1\n",
              "14998      8221263     3597369  2019-05-26             2     6        1\n",
              "14999      4912577    46646893  2019-05-26             2     6        1\n",
              "\n",
              "[15000 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 169
        }
      ],
      "source": [
        "basket['hari'] = basket['basket_date'].dt.dayofweek\n",
        "basket['weekend'] = 0\n",
        "baskets= (basket['hari']==5) | (basket['hari']==6)\n",
        "basket['weekend'] = 0\n",
        "basket.loc[baskets, 'weekend'] = 1\n",
        "basket"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 170,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "Fe27PQwx7wmd",
        "outputId": "a319de4c-c1df-49cf-9b54-9afbaf46383e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-0e9d34ec-5536-4798-a4ae-37f02afcbd24\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>weekend</th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>hari</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3175</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2732</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1469</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1023</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1667</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0</td>\n",
              "      <td>2207</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0</td>\n",
              "      <td>2727</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e9d34ec-5536-4798-a4ae-37f02afcbd24')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0e9d34ec-5536-4798-a4ae-37f02afcbd24 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0e9d34ec-5536-4798-a4ae-37f02afcbd24');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "weekend     0     1\n",
              "hari               \n",
              "0        3175     0\n",
              "1        2732     0\n",
              "2        1469     0\n",
              "3        1023     0\n",
              "4        1667     0\n",
              "5           0  2207\n",
              "6           0  2727"
            ]
          },
          "metadata": {},
          "execution_count": 170
        }
      ],
      "source": [
        "from pandas import crosstab\n",
        "crosstab(basket['hari'], basket['weekend'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 171,
      "metadata": {
        "id": "Q0-dztXf77_r"
      },
      "outputs": [],
      "source": [
        "from pandas import Series\n",
        "dalam_seminggu = Series(basket['customer_id'][basket['weekend']==0].unique()) \n",
        "di_akhir_pekan = Series(basket['customer_id'][basket['weekend']==1].unique())\n",
        "bask = di_akhir_pekan.isin(dalam_seminggu)\n",
        "ecom_pekan= di_akhir_pekan[~bask]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 172,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "V_kIzFbl82XO",
        "outputId": "2e3a9928-7aaf-4b3c-88eb-9f9d19d139a0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-bb3379c0-2f9f-4fe2-a198-9f2922117ea1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>basket_date</th>\n",
              "      <th>basket_count</th>\n",
              "      <th>hari</th>\n",
              "      <th>weekend</th>\n",
              "      <th>ecom_pekan</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>42366585</td>\n",
              "      <td>41475073</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>35956841</td>\n",
              "      <td>43279538</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26139578</td>\n",
              "      <td>31715598</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3262253</td>\n",
              "      <td>47880260</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20056678</td>\n",
              "      <td>44747002</td>\n",
              "      <td>2019-06-19</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14995</th>\n",
              "      <td>8336862</td>\n",
              "      <td>50977318</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14996</th>\n",
              "      <td>9500785</td>\n",
              "      <td>43862061</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14997</th>\n",
              "      <td>22787344</td>\n",
              "      <td>6041664</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14998</th>\n",
              "      <td>8221263</td>\n",
              "      <td>3597369</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14999</th>\n",
              "      <td>4912577</td>\n",
              "      <td>46646893</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>15000 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb3379c0-2f9f-4fe2-a198-9f2922117ea1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bb3379c0-2f9f-4fe2-a198-9f2922117ea1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bb3379c0-2f9f-4fe2-a198-9f2922117ea1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       customer_id  product_id basket_date  ...  hari  weekend  ecom_pekan\n",
              "0         42366585    41475073  2019-06-19  ...     2        0           0\n",
              "1         35956841    43279538  2019-06-19  ...     2        0           0\n",
              "2         26139578    31715598  2019-06-19  ...     2        0           0\n",
              "3          3262253    47880260  2019-06-19  ...     2        0           0\n",
              "4         20056678    44747002  2019-06-19  ...     2        0           0\n",
              "...            ...         ...         ...  ...   ...      ...         ...\n",
              "14995      8336862    50977318  2019-05-26  ...     6        1           1\n",
              "14996      9500785    43862061  2019-05-26  ...     6        1           1\n",
              "14997     22787344     6041664  2019-05-26  ...     6        1           1\n",
              "14998      8221263     3597369  2019-05-26  ...     6        1           0\n",
              "14999      4912577    46646893  2019-05-26  ...     6        1           1\n",
              "\n",
              "[15000 rows x 7 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 172
        }
      ],
      "source": [
        "basket['ecom_pekan'] = 0\n",
        "ecom_basket = basket['customer_id'].isin(ecom_pekan)\n",
        "basket.loc[ecom_basket, 'ecom_pekan'] = 1\n",
        "basket"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "znWxA3rLgKcL"
      },
      "source": [
        " Gabungkan Kedua Dataset Basket dan Customer"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 173,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "ake-lPdifvVj",
        "outputId": "dfafb266-879a-4be1-fd9b-b7853490d4b6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-1f1c591e-5d5d-41da-9a7b-11ccd15aafc9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>basket_date</th>\n",
              "      <th>basket_count</th>\n",
              "      <th>hari</th>\n",
              "      <th>weekend</th>\n",
              "      <th>ecom_pekan</th>\n",
              "      <th>sex</th>\n",
              "      <th>customer_age</th>\n",
              "      <th>tenure</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4897641</td>\n",
              "      <td>34525548</td>\n",
              "      <td>2019-06-15</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>40.0</td>\n",
              "      <td>114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>11623549</td>\n",
              "      <td>50394038</td>\n",
              "      <td>2019-06-18</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Male</td>\n",
              "      <td>30.0</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>11665521</td>\n",
              "      <td>41476812</td>\n",
              "      <td>2019-06-15</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Female</td>\n",
              "      <td>51.0</td>\n",
              "      <td>62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4193819</td>\n",
              "      <td>6455162</td>\n",
              "      <td>2019-06-15</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>42.0</td>\n",
              "      <td>117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1030589</td>\n",
              "      <td>38578121</td>\n",
              "      <td>2019-05-26</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>45.0</td>\n",
              "      <td>127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>12574807</td>\n",
              "      <td>32056122</td>\n",
              "      <td>2019-05-25</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>33.0</td>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68</th>\n",
              "      <td>15192667</td>\n",
              "      <td>31272089</td>\n",
              "      <td>2019-05-24</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Male</td>\n",
              "      <td>46.0</td>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>14248059</td>\n",
              "      <td>48790153</td>\n",
              "      <td>2019-05-21</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Male</td>\n",
              "      <td>29.0</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>10629563</td>\n",
              "      <td>47864502</td>\n",
              "      <td>2019-06-01</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Male</td>\n",
              "      <td>29.0</td>\n",
              "      <td>76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>11737579</td>\n",
              "      <td>46626448</td>\n",
              "      <td>2019-05-27</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Male</td>\n",
              "      <td>35.0</td>\n",
              "      <td>61</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>72 rows × 10 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f1c591e-5d5d-41da-9a7b-11ccd15aafc9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1f1c591e-5d5d-41da-9a7b-11ccd15aafc9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1f1c591e-5d5d-41da-9a7b-11ccd15aafc9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    customer_id  product_id basket_date  ...     sex  customer_age  tenure\n",
              "0       4897641    34525548  2019-06-15  ...    Male          40.0     114\n",
              "1      11623549    50394038  2019-06-18  ...    Male          30.0      63\n",
              "2      11665521    41476812  2019-06-15  ...  Female          51.0      62\n",
              "3       4193819     6455162  2019-06-15  ...    Male          42.0     117\n",
              "4       1030589    38578121  2019-05-26  ...    Male          45.0     127\n",
              "..          ...         ...         ...  ...     ...           ...     ...\n",
              "67     12574807    32056122  2019-05-25  ...    Male          33.0      52\n",
              "68     15192667    31272089  2019-05-24  ...    Male          46.0      37\n",
              "69     14248059    48790153  2019-05-21  ...    Male          29.0      41\n",
              "70     10629563    47864502  2019-06-01  ...    Male          29.0      76\n",
              "71     11737579    46626448  2019-05-27  ...    Male          35.0      61\n",
              "\n",
              "[72 rows x 10 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 173
        }
      ],
      "source": [
        "ecomers = basket.merge(customer, on='customer_id')\n",
        "ecomers"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tjtX_3MKkUIm"
      },
      "source": [
        "Setelah digabungkan, ternyata data customer dan basket hanya tersedia 72 interaksi. Sulit untuk menganalisis karakteristik customer, karena data yang tersisa sangat jauh lebih sedikit dibandingkan data awal. \n",
        "Maka, saya  melanjutkan analisis menggunakan data sebelum digabungkan"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 174,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hm8NSXEmEP_W",
        "outputId": "bde9fdde-9e2a-4f55-9a11-a21da9af599f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "weekend\n",
              "0    21762\n",
              "1    10544\n",
              "Name: basket_count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 174
        }
      ],
      "source": [
        "basketweek=basket.groupby(['weekend'])['basket_count'].sum()\n",
        "basketweek"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 194,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 264
        },
        "id": "6shTBVwNdVOF",
        "outputId": "133d266d-29c8-4243-a40f-4415a0d2d0ce"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Visualization\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "Weekend = ['Hari Lainnya', 'Akhir Pekan']\n",
        "Customer = [21762, 10544]\n",
        "colors = ['lightcoral','steelblue']\n",
        "plt.pie(Customer, labels=Weekend, colors=colors,\n",
        "        startangle=90,\n",
        "        explode = (0, 0.1),\n",
        "        autopct = '%1.2f%%')\n",
        "plt.axis('equal')\n",
        "plt.title('Persentase Transaksi di Akhir Pekan vs di Hari Lainnya')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4sbhlQCWkbw6"
      },
      "source": [
        "Berdasarkan pie chart diatas, dapat dilihat bahwa jumlah transaksi yang hanya dilakukan di akhir pekan lebih sedikit dibanding jumlah transaksi di hari lainnya."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 219,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Px3HimAfnSPA",
        "outputId": "e2d58d58-366f-457a-f16f-fee748ff2910"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "hari\n",
              "0    6840\n",
              "1    5948\n",
              "2    3214\n",
              "3    2242\n",
              "4    3518\n",
              "5    4712\n",
              "6    5832\n",
              "Name: basket_count, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 219
        }
      ],
      "source": [
        "basketday=basket.groupby(['hari'])['basket_count'].sum()\n",
        "basketday"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "basketday= basket.groupby('hari').sum()\n",
        "basketdays = basketday.sort_values([\"basket_count\"], ascending=False)\n",
        "basketdays"
      ],
      "metadata": {
        "id": "wOKf-lsoKcn6",
        "outputId": "51f90eb3-9614-4a1f-9b7e-13fddda53ec8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        }
      },
      "execution_count": 221,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-8d0da046-c956-43ec-8edc-fcccfcd1aeee\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "      <th>product_id</th>\n",
              "      <th>basket_count</th>\n",
              "      <th>weekend</th>\n",
              "      <th>ecom_pekan</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>hari</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>55844478177</td>\n",
              "      <td>103299191286</td>\n",
              "      <td>6840</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>50839816293</td>\n",
              "      <td>89277533809</td>\n",
              "      <td>5948</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>46927942347</td>\n",
              "      <td>88862543476</td>\n",
              "      <td>5832</td>\n",
              "      <td>2727</td>\n",
              "      <td>2563</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>37842006560</td>\n",
              "      <td>71162765340</td>\n",
              "      <td>4712</td>\n",
              "      <td>2207</td>\n",
              "      <td>2087</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>29065564417</td>\n",
              "      <td>54434801954</td>\n",
              "      <td>3518</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>29885857215</td>\n",
              "      <td>49237677901</td>\n",
              "      <td>3214</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20879346666</td>\n",
              "      <td>34191126972</td>\n",
              "      <td>2242</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d0da046-c956-43ec-8edc-fcccfcd1aeee')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8d0da046-c956-43ec-8edc-fcccfcd1aeee button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8d0da046-c956-43ec-8edc-fcccfcd1aeee');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      customer_id    product_id  basket_count  weekend  ecom_pekan\n",
              "hari                                                              \n",
              "0     55844478177  103299191286          6840        0           0\n",
              "1     50839816293   89277533809          5948        0           0\n",
              "6     46927942347   88862543476          5832     2727        2563\n",
              "5     37842006560   71162765340          4712     2207        2087\n",
              "4     29065564417   54434801954          3518        0           0\n",
              "2     29885857215   49237677901          3214        0           0\n",
              "3     20879346666   34191126972          2242        0           0"
            ]
          },
          "metadata": {},
          "execution_count": 221
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 222,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "7sB5hSc4nX9J",
        "outputId": "17c7a801-f190-49de-febf-2da392f99bd2"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "Day = ['hari0', 'hari11', 'hari6', 'hari5', 'hari4', 'hari2', 'hari3']\n",
        "Basket = [6840, 5948, 5832, 4712, 3518, 3214, 2242]\n",
        "plt.figure(figsize=(12,7))\n",
        "plt.bar(Day, Basket, color=['darkred','firebrick', 'crimson', 'indianred', 'lightcoral', 'darksalmon', 'lightsalmon'])\n",
        "plt.title('Jumlah Transaksi berdasarkan Hari', size=20)\n",
        "plt.ylabel('Jumlah Transaksi', size=14)\n",
        "plt.xticks(size=12)\n",
        "plt.yticks(size=12)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZvlWEqOvolzn"
      },
      "source": [
        "Berdasarkan bar chart diatas dapat dilihat dalam sebulan ditiap minggunya, hari0 merupakan hari dengan jumlah transaksi terbanyak, dan hari 3 merupakan hari dengan penjualan paling sedikit."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iaHti6NvcKkX"
      },
      "source": [
        "# CONCLUSION & ANALYTICS APPROACH"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FxAd1QtDcNXz"
      },
      "source": [
        "# Conclusion\n",
        "Berdasarkan hasil analisis Project 1A menggunakan dataset customer dapat disimpulkan:\n",
        "1. Costumer didominasi oleh jenis kelamin laki-laki sebanyak 76%, dimana customer laki-laki memiliki transaksi keranjang yang lebih banyak dan waktu tenor yang lebih lama, dan juga customer dari kelompok usia 25 sampai 50 tahun. Sehingga seller mengetahui target pasar mereka, yaitu customer dengan jenis kelamin laki-laki, serta customer dengan kelompok usia 25 sampai 50 tahun.\n",
        "2. Terjadi peningkatan penjualan yang sangat besar pada tanggal 25 mei s/d 28 mei, dimana 27 mei 2019 merupakan hari dengan jumlah penjualan terbanyak\n",
        "3. Jumlah penjualan paling sedikit terjadi pada tanggal 06 juni 2019\n",
        "4. Terdapat 13161 jenis produk berdasarkan produk.id, dimana produk yang paling diminati adalah produk dengan id 43524799, sebanyak 32 produk\n",
        "5. Transaksi yang dilakukan hanya di akhir pekan tidak lebih banyak dibandingkan transaksi di hari lainnya. Dimana hari0 merupakan hari dengan transaksi terbanyak.\n",
        "\n",
        "# Analystics Approach\n",
        "1. Diagnostic Analytics\n",
        "-  Hal ini bisa saja terjadi karena produk yang disediakan oleh ecommerce merupakan produk yang lebih disukai oleh customer laki-laki dan customer dengan kelompok usia 25 sampai dengan 50 tahun.\n",
        "- Adanya promo besar-besaran pada tanggal 25 mei s/d 28 mei\n",
        "- Adanya customer baru yang masih bingung menggunakan ecommerce pada tanggal 06 juni 2019.\n",
        "- Produk yang diminati bisa saja sedang sangat dibutuhkan oleh para customer pada saat itu, atau bisa juga terjadi karena promo atau harga yang lebih terjangkau.\n",
        "- Hari0 dengan transaksi terbanyak bisa juga terjadi karena adanya promo di setiap hari tersebut.\n",
        "\n",
        "2. Predictive Analytics\n",
        "- Mengembangkan sistem untuk memprediksi barang apa yang dibutuhkan oleh customer dan sitem untuk memprediksi respon customer jika diberikan promo.\n",
        "\n",
        "3. Prescriptive Analytics\n",
        "- Sebaiknya seller menyediakan barang yang sesuai dengan customer dengan konstribusi terbesar, yaitu customer dengan jenis kelamin laki-laki dan customer dengan kelompok usia 25 sampai 50 tahun.\n",
        "- Ada baiknya juga seller menyediakan barang yang menarik perhatian customer perempuan.\n",
        "- Mempromosikan kelebihan produk yang kurang diminati customer."
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "PROJECT 1",
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
